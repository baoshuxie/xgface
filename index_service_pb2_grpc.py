# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import index_service_pb2 as index__service__pb2


class IndexServiceStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BuildbyPoints = channel.unary_unary(
        '/xgindex.IndexService/BuildbyPoints',
        request_serializer=index__service__pb2.BuildRequest.SerializeToString,
        response_deserializer=index__service__pb2.BuildResponse.FromString,
        )
    self.BuildbyClusters = channel.unary_unary(
        '/xgindex.IndexService/BuildbyClusters',
        request_serializer=index__service__pb2.IndexMap.SerializeToString,
        response_deserializer=index__service__pb2.Error.FromString,
        )
    self.Find = channel.unary_unary(
        '/xgindex.IndexService/Find',
        request_serializer=index__service__pb2.Feature.SerializeToString,
        response_deserializer=index__service__pb2.Cluster.FromString,
        )
    self.InsertPoint = channel.unary_unary(
        '/xgindex.IndexService/InsertPoint',
        request_serializer=index__service__pb2.Feature.SerializeToString,
        response_deserializer=index__service__pb2.Cluster.FromString,
        )
    self.InsertCluster = channel.unary_unary(
        '/xgindex.IndexService/InsertCluster',
        request_serializer=index__service__pb2.Feature.SerializeToString,
        response_deserializer=index__service__pb2.Cluster.FromString,
        )
    self.UpdateCluster = channel.unary_unary(
        '/xgindex.IndexService/UpdateCluster',
        request_serializer=index__service__pb2.Cluster.SerializeToString,
        response_deserializer=index__service__pb2.Error.FromString,
        )
    self.DeletebyCId = channel.unary_unary(
        '/xgindex.IndexService/DeletebyCId',
        request_serializer=index__service__pb2.Cluster.SerializeToString,
        response_deserializer=index__service__pb2.Error.FromString,
        )
    self.GetKdClusterCount = channel.unary_unary(
        '/xgindex.IndexService/GetKdClusterCount',
        request_serializer=index__service__pb2.Request.SerializeToString,
        response_deserializer=index__service__pb2.KDClusterCount.FromString,
        )


class IndexServiceServicer(object):
  """Interface exported by the server.
  """

  def BuildbyPoints(self, request, context):
    """index RPC service

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BuildbyClusters(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Find(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InsertPoint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InsertCluster(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateCluster(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeletebyCId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetKdClusterCount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IndexServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BuildbyPoints': grpc.unary_unary_rpc_method_handler(
          servicer.BuildbyPoints,
          request_deserializer=index__service__pb2.BuildRequest.FromString,
          response_serializer=index__service__pb2.BuildResponse.SerializeToString,
      ),
      'BuildbyClusters': grpc.unary_unary_rpc_method_handler(
          servicer.BuildbyClusters,
          request_deserializer=index__service__pb2.IndexMap.FromString,
          response_serializer=index__service__pb2.Error.SerializeToString,
      ),
      'Find': grpc.unary_unary_rpc_method_handler(
          servicer.Find,
          request_deserializer=index__service__pb2.Feature.FromString,
          response_serializer=index__service__pb2.Cluster.SerializeToString,
      ),
      'InsertPoint': grpc.unary_unary_rpc_method_handler(
          servicer.InsertPoint,
          request_deserializer=index__service__pb2.Feature.FromString,
          response_serializer=index__service__pb2.Cluster.SerializeToString,
      ),
      'InsertCluster': grpc.unary_unary_rpc_method_handler(
          servicer.InsertCluster,
          request_deserializer=index__service__pb2.Feature.FromString,
          response_serializer=index__service__pb2.Cluster.SerializeToString,
      ),
      'UpdateCluster': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateCluster,
          request_deserializer=index__service__pb2.Cluster.FromString,
          response_serializer=index__service__pb2.Error.SerializeToString,
      ),
      'DeletebyCId': grpc.unary_unary_rpc_method_handler(
          servicer.DeletebyCId,
          request_deserializer=index__service__pb2.Cluster.FromString,
          response_serializer=index__service__pb2.Error.SerializeToString,
      ),
      'GetKdClusterCount': grpc.unary_unary_rpc_method_handler(
          servicer.GetKdClusterCount,
          request_deserializer=index__service__pb2.Request.FromString,
          response_serializer=index__service__pb2.KDClusterCount.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'xgindex.IndexService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
